// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Shift.Repository
{
    // Portals
    public partial class PortalConfiguration : IEntityTypeConfiguration<Portal>
    {
        public void Configure(EntityTypeBuilder<Portal> builder)
        {
            builder.ToTable("Portals", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_Portals").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar(200)").IsRequired().HasMaxLength(200);
            builder.Property(x => x.Domain).HasColumnName(@"Domain").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.ParentId).HasColumnName(@"ParentID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.Alias).HasColumnName(@"Alias").HasColumnType("nvarchar(20)").IsRequired(false).HasMaxLength(20);
            builder.Property(x => x.Direction).HasColumnName(@"Direction").HasColumnType("nchar(3)").IsRequired(false).IsFixedLength().HasMaxLength(3);
            builder.Property(x => x.Language).HasColumnName(@"Language").HasColumnType("nchar(6)").IsRequired(false).IsFixedLength().HasMaxLength(6);
            builder.Property(x => x.Favicon).HasColumnName(@"Favicon").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.ShowHerOwnLogo).HasColumnName(@"ShowHerOwnLogo").HasColumnType("bit").IsRequired();
            builder.Property(x => x.NoDashboard).HasColumnName(@"NoDashboard").HasColumnType("bit").IsRequired();
            builder.Property(x => x.TitleAlias).HasColumnName(@"TitleAlias").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.MetaDescription).HasColumnName(@"MetaDescription").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.MetaKeyWord).HasColumnName(@"MetaKeyWord").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.FolderAlias).HasColumnName(@"FolderAlias").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.ValidLoginIps).HasColumnName(@"ValidLoginIps").HasColumnType("nvarchar(4000)").IsRequired(false).HasMaxLength(4000);
            builder.Property(x => x.Qouta).HasColumnName(@"Qouta").HasColumnType("int").IsRequired();
            builder.Property(x => x.Ordering).HasColumnName(@"Ordering").HasColumnType("int").IsRequired();
            builder.Property(x => x.MoeinId).HasColumnName(@"MoeinId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsSelected).HasColumnName(@"IsSelected").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ChannelLatinId).HasColumnName(@"ChannelLatinID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EpgKey).HasColumnName(@"EPGKey").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SamtId).HasColumnName(@"SamtId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ChehrehId).HasColumnName(@"ChehrehId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Enable).HasColumnName(@"Enable").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IconName).HasColumnName(@"IconName").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.PortalId).HasColumnName(@"PortalID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.UidLevel).HasColumnName(@"UIDLevel").HasColumnType("char(2)").IsRequired(false).IsFixedLength().IsUnicode(false).HasMaxLength(2);

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<Portal> builder);
    }

}
// </auto-generated>
