// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Shift.Repository
{
    // Shift_MonetarySettings
    public partial class ShiftMonetarySettingConfiguration : IEntityTypeConfiguration<ShiftMonetarySetting>
    {
        public void Configure(EntityTypeBuilder<ShiftMonetarySetting> builder)
        {
            builder.ToTable("Shift_MonetarySettings", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_Shift_MonetarySettings").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.PortalId).HasColumnName(@"PortalID").HasColumnType("int").IsRequired();
            builder.Property(x => x.CooperationTypeId).HasColumnName(@"CooperationTypeID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.JobId).HasColumnName(@"JobID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.MandatoryShiftCount).HasColumnName(@"MandatoryShiftCount").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.NonMandatoryShiftWage).HasColumnName(@"NonMandatoryShiftWage").HasColumnType("decimal(19,4)").HasPrecision(19,4).IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.Portal).WithMany(b => b.ShiftMonetarySettings).HasForeignKey(c => c.PortalId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Shift_MonetarySettings_Portals");
            builder.HasOne(a => a.SamtHrCooperationType).WithMany(b => b.ShiftMonetarySettings).HasForeignKey(c => c.CooperationTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Shift_MonetarySettings_SAMT_HRCooperationType");
            builder.HasOne(a => a.SamtResourceType).WithMany(b => b.ShiftMonetarySettings).HasForeignKey(c => c.JobId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Shift_MonetarySettings_SAMT_ResourceTypes");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<ShiftMonetarySetting> builder);
    }

}
// </auto-generated>
