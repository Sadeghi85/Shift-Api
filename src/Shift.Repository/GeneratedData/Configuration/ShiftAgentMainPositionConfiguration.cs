// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Shift.Repository
{
    // Shift_AgentMainPosition
    public partial class ShiftAgentMainPositionConfiguration : IEntityTypeConfiguration<ShiftAgentMainPosition>
    {
        public void Configure(EntityTypeBuilder<ShiftAgentMainPosition> builder)
        {
            builder.ToTable("Shift_AgentMainPosition", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_Shift_AgentMainPosition").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.AgentId).HasColumnName(@"AgentID").HasColumnType("int").IsRequired();
            builder.Property(x => x.PortalId).HasColumnName(@"PortalID").HasColumnType("int").IsRequired();
            builder.Property(x => x.JobId).HasColumnName(@"JobID").HasColumnType("int").IsRequired();
            builder.Property(x => x.HrJobId).HasColumnName(@"HRJobID").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.Portal).WithMany(b => b.ShiftAgentMainPositions).HasForeignKey(c => c.PortalId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Shift_AgentMainPosition_Portals");
            builder.HasOne(a => a.SamtAgent).WithMany(b => b.ShiftAgentMainPositions).HasForeignKey(c => c.AgentId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Shift_AgentMainPosition_SAMT_Agents");
            builder.HasOne(a => a.SamtHrJob).WithMany(b => b.ShiftAgentMainPositions).HasForeignKey(c => c.HrJobId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Shift_AgentMainPosition_SAMT_HRJob");
            builder.HasOne(a => a.SamtResourceType).WithMany(b => b.ShiftAgentMainPositions).HasForeignKey(c => c.JobId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Shift_AgentMainPosition_SAMT_ResourceTypes");

            builder.HasIndex(x => new { x.AgentId, x.PortalId }).HasDatabaseName("IX_Shift_AgentMainPosition").IsUnique();

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<ShiftAgentMainPosition> builder);
    }

}
// </auto-generated>
