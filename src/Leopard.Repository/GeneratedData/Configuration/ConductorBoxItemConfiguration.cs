// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // ConductorBoxItems
    public partial class ConductorBoxItemConfiguration : IEntityTypeConfiguration<ConductorBoxItem>
    {
        public void Configure(EntityTypeBuilder<ConductorBoxItem> builder)
        {
            builder.ToTable("ConductorBoxItems", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_ConductorBoxItems_1").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.ConductorBoxId).HasColumnName(@"ConductorBoxID").HasColumnType("int").IsRequired();
            builder.Property(x => x.TemplateId).HasColumnName(@"TemplateID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ClipArtId).HasColumnName(@"ClipArtID").HasColumnType("int").IsRequired();
            builder.Property(x => x.TypeId).HasColumnName(@"TypeID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ChannelId).HasColumnName(@"ChannelID").HasColumnType("int").IsRequired();
            builder.Property(x => x.Ordering).HasColumnName(@"Ordering").HasColumnType("int").IsRequired();
            builder.Property(x => x.Duration).HasColumnName(@"Duration").HasColumnType("time").IsRequired();
            builder.Property(x => x.Date).HasColumnName(@"Date").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.ConductorBox).WithMany(b => b.ConductorBoxItems).HasForeignKey(c => c.ConductorBoxId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConductorBoxItems_ConductorBox");
            builder.HasOne(a => a.ConductorBoxTemplate).WithMany(b => b.ConductorBoxItems).HasForeignKey(c => c.TemplateId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConductorBoxItems_ConductorBoxTemplates");
            builder.HasOne(a => a.ConductorBoxType).WithMany(b => b.ConductorBoxItems).HasForeignKey(c => c.TypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConductorBoxItems_ConductorBoxTypes");
            builder.HasOne(a => a.ConductorChannelProgram).WithMany(b => b.ConductorBoxItems).HasForeignKey(c => c.ClipArtId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConductorBoxItems_ConductorChannelPrograms");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<ConductorBoxItem> builder);
    }

}
// </auto-generated>
