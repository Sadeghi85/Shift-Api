// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // SAMT_RequestApproach
    public partial class SamtRequestApproachConfiguration : IEntityTypeConfiguration<SamtRequestApproach>
    {
        public void Configure(EntityTypeBuilder<SamtRequestApproach> builder)
        {
            builder.ToTable("SAMT_RequestApproach", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_TelavatRequestApproach").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.RequestId).HasColumnName(@"RequestID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ApproachId).HasColumnName(@"ApproachID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ApproachPercent).HasColumnName(@"ApproachPercent").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.SamtApproach).WithMany(b => b.SamtRequestApproaches).HasForeignKey(c => c.ApproachId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatRequestApproach_TelavatApproach");
            builder.HasOne(a => a.SamtRequest).WithMany(b => b.SamtRequestApproaches).HasForeignKey(c => c.RequestId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SAMT_RequestApproach_SAMT_Requests");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<SamtRequestApproach> builder);
    }

}
// </auto-generated>
