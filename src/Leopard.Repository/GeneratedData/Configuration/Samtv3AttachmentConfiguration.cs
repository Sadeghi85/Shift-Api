// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // SAMTV3_Attachments
    public partial class Samtv3AttachmentConfiguration : IEntityTypeConfiguration<Samtv3Attachment>
    {
        public void Configure(EntityTypeBuilder<Samtv3Attachment> builder)
        {
            builder.ToTable("SAMTV3_Attachments", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_SAMTV3_Attachments").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.AttachmentTypeId).HasColumnName(@"AttachmentTypeId").HasColumnType("int").IsRequired();
            builder.Property(x => x.FilePath).HasColumnName(@"FilePath").HasColumnType("nvarchar(1000)").IsRequired().HasMaxLength(1000);
            builder.Property(x => x.ThumbnailPath).HasColumnName(@"ThumbnailPath").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.FileExtention).HasColumnName(@"FileExtention").HasColumnType("nvarchar(50)").IsRequired().HasMaxLength(50);
            builder.Property(x => x.FileSize).HasColumnName(@"FileSize").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.Samtv3AttachmentType).WithMany(b => b.Samtv3Attachment).HasForeignKey(c => c.AttachmentTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SAMTV3_Attachments_SAMTV3_AttachmentTypes");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<Samtv3Attachment> builder);
    }

}
// </auto-generated>
