// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // SAMT_Requests
    public partial class SamtRequestConfiguration : IEntityTypeConfiguration<SamtRequest>
    {
        public void Configure(EntityTypeBuilder<SamtRequest> builder)
        {
            builder.ToTable("SAMT_Requests", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_SAMT_Requests").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.OldId).HasColumnName(@"OldId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Program).HasColumnName(@"Program").HasColumnType("nvarchar(1000)").IsRequired().HasMaxLength(1000);
            builder.Property(x => x.GroupId).HasColumnName(@"GroupID").HasColumnType("int").IsRequired();
            builder.Property(x => x.LicenseNumber).HasColumnName(@"LicenseNumber").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.ExportationDate).HasColumnName(@"ExportationDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.ProgramGradeId).HasColumnName(@"ProgramGradeID").HasColumnType("int").IsRequired();
            builder.Property(x => x.StructureId).HasColumnName(@"StructureID").HasColumnType("int").IsRequired();
            builder.Property(x => x.SubStructureId).HasColumnName(@"SubStructureID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Topic).HasColumnName(@"Topic").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.ProgramNumber).HasColumnName(@"ProgramNumber").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Time).HasColumnName(@"Time").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ResearchTime).HasColumnName(@"ResearchTime").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ResearchMethod).HasColumnName(@"ResearchMethod").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.ReviewTime).HasColumnName(@"ReviewTime").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ReviewMethod).HasColumnName(@"ReviewMethod").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.RudimentTime).HasColumnName(@"RudimentTime").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.RudimentMethod).HasColumnName(@"RudimentMethod").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.ManpowerTime).HasColumnName(@"ManpowerTime").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ManpowerMethod).HasColumnName(@"ManpowerMethod").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.FilmedTime).HasColumnName(@"FilmedTime").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.FilmedMethod).HasColumnName(@"FilmedMethod").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.ChooseImageTime).HasColumnName(@"ChooseImageTime").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ChooseImageMethod).HasColumnName(@"ChooseImageMethod").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.LaboratoryTime).HasColumnName(@"LaboratoryTime").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LaboratoryMethod).HasColumnName(@"LaboratoryMethod").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.MontageTime).HasColumnName(@"MontageTime").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MontageMethod).HasColumnName(@"MontageMethod").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.SoundTime).HasColumnName(@"SoundTime").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SoundMethod).HasColumnName(@"SoundMethod").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.MakingStartDate).HasColumnName(@"MakingStartDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.MakingEndDate).HasColumnName(@"MakingEndDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.ProximateDateBroadcast).HasColumnName(@"ProximateDateBroadcast").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.EstimateNumer).HasColumnName(@"EstimateNumer").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.EstimateDate).HasColumnName(@"EstimateDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.ProgramCode).HasColumnName(@"ProgramCode").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.NumberFile).HasColumnName(@"NumberFile").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.AutenticateDate).HasColumnName(@"AutenticateDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.AutenticateNumber).HasColumnName(@"AutenticateNumber").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.ReligionPercent).HasColumnName(@"ReligionPercent").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MolalsPercent).HasColumnName(@"MolalsPercent").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.HopePercent).HasColumnName(@"HopePercent").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.InformationPercent).HasColumnName(@"InformationPercent").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Purpose).HasColumnName(@"Purpose").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.MinuteRate).HasColumnName(@"MinuteRate").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.CostProduction).HasColumnName(@"CostProduction").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.CostDecor).HasColumnName(@"CostDecor").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.MeetingMembers).HasColumnName(@"MeetingMembers").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.OtherDesc).HasColumnName(@"OtherDesc").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.HasPartnership).HasColumnName(@"HasPartnership").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.TheParticipation).HasColumnName(@"TheParticipation").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.NumberParticipation).HasColumnName(@"NumberParticipation").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.DescParticipation).HasColumnName(@"DescParticipation").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.PortalId).HasColumnName(@"PortalID").HasColumnType("int").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.HasChangeNumber).HasColumnName(@"HasChangeNumber").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.HasChangeGrade).HasColumnName(@"HasChangeGrade").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.PriorityContent).HasColumnName(@"PriorityContent").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.SubjectTags).HasColumnName(@"SubjectTags").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.Remarks).HasColumnName(@"Remarks").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ContentPriorityId).HasColumnName(@"ContentPriorityID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EstimateAmount).HasColumnName(@"EstimateAmount").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.EstaimationType).HasColumnName(@"EstaimationType").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.DirectorLastName).HasColumnName(@"DirectorLastName").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.ProducerLastName).HasColumnName(@"ProducerLastName").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.HasChangedTimeDescription).HasColumnName(@"HasChangedTimeDescription").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.HasChangedGradeDescription).HasColumnName(@"HasChangedGradeDescription").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ApprovedStartDate).HasColumnName(@"ApprovedStartDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.ApprovedEndDate).HasColumnName(@"ApprovedEndDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.ApprovedBroadCastDate).HasColumnName(@"ApprovedBroadCastDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.EvaluatedMinuteRate).HasColumnName(@"EvaluatedMinuteRate").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.EvaluatedCostProduction).HasColumnName(@"EvaluatedCostProduction").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.EvaluatedCostDecor).HasColumnName(@"EvaluatedCostDecor").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.DirectPayment).HasColumnName(@"DirectPayment").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.EvaluatedDirectPayment).HasColumnName(@"EvaluatedDirectPayment").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.EvaluateDate).HasColumnName(@"EvaluateDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.EvaluationMeetingMembers).HasColumnName(@"EvaluationMeetingMembers").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.EvaluationOtherDesc).HasColumnName(@"EvaluationOtherDesc").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.EvaluatedThePartnership).HasColumnName(@"EvaluatedThePartnership").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.EvaluatedNumberPartnership).HasColumnName(@"EvaluatedNumberPartnership").HasColumnType("float").HasPrecision(53).IsRequired(false);
            builder.Property(x => x.EvaluationType).HasColumnName(@"EvaluationType").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EvaluatedDescPartnership).HasColumnName(@"EvaluatedDescPartnership").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.EvaluatedTime).HasColumnName(@"EvaluatedTime").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EvaluatedParts).HasColumnName(@"EvaluatedParts").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EvaluationHasChangeGrade).HasColumnName(@"EvaluationHasChangeGrade").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.EvaluationHasChangeTime).HasColumnName(@"EvaluationHasChangeTime").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.EvaluationHasPartnership).HasColumnName(@"EvaluationHasPartnership").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.EvaluationChangeGradeDesc).HasColumnName(@"EvaluationChangeGradeDesc").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.EvaluationChangeTimeDesc).HasColumnName(@"EvaluationChangeTimeDesc").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.SubsidiarySubjectId).HasColumnName(@"SubsidiarySubjectID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LicenseProgramCount).HasColumnName(@"LicenseProgramCount").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LicenseProgramTime).HasColumnName(@"LicenseProgramTime").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BaseYear).HasColumnName(@"BaseYear").HasColumnType("int").IsRequired();
            builder.Property(x => x.EstimationDirector).HasColumnName(@"EstimationDirector").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.EvaluationDirector).HasColumnName(@"EvaluationDirector").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.HasRevisoryEstimation).HasColumnName(@"HasRevisoryEstimation").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.CountOffish).HasColumnName(@"CountOffish").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MainSubjectId).HasColumnName(@"MainSubjectID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CorrectiveDesc).HasColumnName(@"CorrectiveDesc").HasColumnType("nvarchar(4000)").IsRequired(false).HasMaxLength(4000);
            builder.Property(x => x.StructureTypeId).HasColumnName(@"StructureTypeID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ArchivedPercent).HasColumnName(@"ArchivedPercent").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.RecordedPercent).HasColumnName(@"RecordedPercent").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LivePercent).HasColumnName(@"LivePercent").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.LastEstimateDate).HasColumnName(@"LastEstimateDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.Flags).HasColumnName(@"Flags").HasColumnType("char(3)").IsRequired(false).IsFixedLength().IsUnicode(false).HasMaxLength(3);
            builder.Property(x => x.ProgramSummary).HasColumnName(@"ProgramSummary").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ProductionStartDate).HasColumnName(@"ProductionStartDate").HasColumnType("nchar(10)").IsRequired(false).IsFixedLength().HasMaxLength(10);
            builder.Property(x => x.ProductionEndtDate).HasColumnName(@"ProductionEndtDate").HasColumnType("nchar(10)").IsRequired(false).IsFixedLength().HasMaxLength(10);
            builder.Property(x => x.ProgramLogo).HasColumnName(@"ProgramLogo").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.Audience).HasColumnName(@"Audience").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.PresentationTypeId).HasColumnName(@"PresentationTypeID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.HasProposalHistory).HasColumnName(@"HasProposalHistory").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.SubProposalHistoryId).HasColumnName(@"SubProposalHistoryID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProposalBackground).HasColumnName(@"ProposalBackground").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ProposalNecessary).HasColumnName(@"ProposalNecessary").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ProposalGoals).HasColumnName(@"ProposalGoals").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.BroeadcastMorning).HasColumnName(@"BroeadcastMorning").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.BroeadcastNone).HasColumnName(@"BroeadcastNone").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.BroeadcastEvening).HasColumnName(@"BroeadcastEvening").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.BroeadcastNight).HasColumnName(@"BroeadcastNight").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.BroeadcastMidnight).HasColumnName(@"BroeadcastMidnight").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.BroeadcastDurationId).HasColumnName(@"BroeadcastDurationID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Repeat).HasColumnName(@"Repeat").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.SubRepeatId).HasColumnName(@"SubRepeatID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.HasResearch).HasColumnName(@"HasResearch").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.ProductionMode).HasColumnName(@"ProductionMode").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SecondProgramName).HasColumnName(@"SecondProgramName").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.ProdSettingVersionId).HasColumnName(@"ProdSettingVersionID").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.Portal).WithMany(b => b.SamtRequests).HasForeignKey(c => c.PortalId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatRequests_Portals");
            builder.HasOne(a => a.SamtGrade).WithMany(b => b.SamtRequests).HasForeignKey(c => c.ProgramGradeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatRequests_TelavatProgramGrades");
            builder.HasOne(a => a.SamtGroup).WithMany(b => b.SamtRequests).HasForeignKey(c => c.GroupId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatRequests_TelavatGroups");
            builder.HasOne(a => a.SamtProductionSettingVersion).WithMany(b => b.SamtRequests).HasForeignKey(c => c.ProdSettingVersionId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SAMT_Requests_SAMT_ProductionSettingVersions");
            builder.HasOne(a => a.SamtStructureType).WithMany(b => b.SamtRequests).HasForeignKey(c => c.StructureTypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatRequests_TelavatStructureTypes");
            builder.HasOne(a => a.SamtSubject).WithMany(b => b.SamtRequests).HasForeignKey(c => c.MainSubjectId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatRequests_TelavatSubjects");
            builder.HasOne(a => a.TelavatContentPriority).WithMany(b => b.SamtRequests).HasForeignKey(c => c.ContentPriorityId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatRequests_TelavatContentPriority");
            builder.HasOne(a => a.TelavatSubsidiarySubject).WithMany(b => b.SamtRequests).HasForeignKey(c => c.SubsidiarySubjectId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatRequests_TelavatSubsidiarySubjects");

            builder.HasIndex(x => x.LicenseNumber).HasDatabaseName("IX_LICENSENO");
            builder.HasIndex(x => x.Program).HasDatabaseName("IX_PRG");
            builder.HasIndex(x => new { x.PortalId, x.BaseYear }).HasDatabaseName("IX_YEAR");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<SamtRequest> builder);
    }

}
// </auto-generated>
