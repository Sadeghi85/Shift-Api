// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // TelavatEquipments
    public partial class TelavatEquipmentConfiguration : IEntityTypeConfiguration<TelavatEquipment>
    {
        public void Configure(EntityTypeBuilder<TelavatEquipment> builder)
        {
            builder.ToTable("TelavatEquipments", "dbo");
            builder.HasKey(x => new { x.Id, x.CategoryId }).HasName("PK_TelavatEquipments").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.CategoryId).HasColumnName(@"CategoryID").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.No).HasColumnName(@"No").HasColumnType("nvarchar(1000)").IsRequired().HasMaxLength(1000);
            builder.Property(x => x.Model).HasColumnName(@"Model").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.Ordering).HasColumnName(@"Ordering").HasColumnType("int").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.TelavatEquipmentCategory).WithMany(b => b.TelavatEquipments).HasForeignKey(c => c.CategoryId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatEquipments_TelavatEquipmentCategories");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<TelavatEquipment> builder);
    }

}
// </auto-generated>
