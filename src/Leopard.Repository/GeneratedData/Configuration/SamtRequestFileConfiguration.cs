// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // SAMT_RequestFiles
    public partial class SamtRequestFileConfiguration : IEntityTypeConfiguration<SamtRequestFile>
    {
        public void Configure(EntityTypeBuilder<SamtRequestFile> builder)
        {
            builder.ToTable("SAMT_RequestFiles", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_TelavatRequestFiles").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.LogId).HasColumnName(@"LogID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar(1000)").IsRequired().HasMaxLength(1000);
            builder.Property(x => x.FileName).HasColumnName(@"FileName").HasColumnType("nvarchar(1000)").IsRequired().HasMaxLength(1000);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.RequestId).HasColumnName(@"RequestID").HasColumnType("int").IsRequired();
            builder.Property(x => x.Step).HasColumnName(@"Step").HasColumnType("int").IsRequired();
            builder.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar(4000)").IsRequired(false).HasMaxLength(4000);
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.Type).HasColumnName(@"Type").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.UploadByFtp).HasColumnName(@"UploadByFTP").HasColumnType("bit").IsRequired();
            builder.Property(x => x.AttachmentType).HasColumnName(@"AttachmentType").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.Extention).HasColumnName(@"Extention").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.IsExternal).HasColumnName(@"IsExternal").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.SamtRequest).WithMany(b => b.SamtRequestFiles).HasForeignKey(c => c.RequestId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatRequestFiles_SAMT_Requests");
            builder.HasOne(a => a.SamtRequestLog).WithMany(b => b.SamtRequestFiles).HasForeignKey(c => c.LogId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatRequestFiles_TelavatRequestLogs");

            builder.HasIndex(x => new { x.LogId, x.Title, x.RequestId }).HasDatabaseName("IX_FILAN");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<SamtRequestFile> builder);
    }

}
// </auto-generated>
