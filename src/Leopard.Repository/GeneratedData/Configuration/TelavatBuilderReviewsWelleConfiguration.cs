// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // TelavatBuilderReviewsWelle
    public partial class TelavatBuilderReviewsWelleConfiguration : IEntityTypeConfiguration<TelavatBuilderReviewsWelle>
    {
        public void Configure(EntityTypeBuilder<TelavatBuilderReviewsWelle> builder)
        {
            builder.ToTable("TelavatBuilderReviewsWelle", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_TelavatBuilderwelle").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.BuilderReviewId).HasColumnName(@"BuilderReviewID").HasColumnType("int").IsRequired();
            builder.Property(x => x.StructureType).HasColumnName(@"StructureType").HasColumnType("int").IsRequired();
            builder.Property(x => x.Type).HasColumnName(@"Type").HasColumnType("int").IsRequired();
            builder.Property(x => x.PartNumber).HasColumnName(@"PartNumber").HasColumnType("int").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.SamtBuilderReview).WithMany(b => b.TelavatBuilderReviewsWelles).HasForeignKey(c => c.BuilderReviewId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatBuilderwelle_TelavatBuilderReviews");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<TelavatBuilderReviewsWelle> builder);
    }

}
// </auto-generated>
