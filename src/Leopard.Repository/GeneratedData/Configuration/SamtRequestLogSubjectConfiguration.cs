// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // SAMT_RequestLogSubjects
    public partial class SamtRequestLogSubjectConfiguration : IEntityTypeConfiguration<SamtRequestLogSubject>
    {
        public void Configure(EntityTypeBuilder<SamtRequestLogSubject> builder)
        {
            builder.ToTable("SAMT_RequestLogSubjects", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_SAMT_RequestLogSubjects").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.LogId).HasColumnName(@"LogID").HasColumnType("int").IsRequired();
            builder.Property(x => x.SubjectId).HasColumnName(@"SubjectID").HasColumnType("int").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.SamtRequestLog).WithMany(b => b.SamtRequestLogSubjects).HasForeignKey(c => c.LogId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SAMT_RequestLogSubjects_SAMT_RequestLogs");
            builder.HasOne(a => a.SamtSubject).WithMany(b => b.SamtRequestLogSubjects).HasForeignKey(c => c.SubjectId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SAMT_RequestLogSubjects_TelavatSubjects");

            builder.HasIndex(x => new { x.LogId, x.SubjectId }).HasDatabaseName("IX_1");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<SamtRequestLogSubject> builder);
    }

}
// </auto-generated>
