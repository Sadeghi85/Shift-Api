// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // SAMT_RequestEvents
    public partial class SamtRequestEventConfiguration : IEntityTypeConfiguration<SamtRequestEvent>
    {
        public void Configure(EntityTypeBuilder<SamtRequestEvent> builder)
        {
            builder.ToTable("SAMT_RequestEvents", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_SAMT_RequestEvents").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.RequestId).HasColumnName(@"RequestID").HasColumnType("int").IsRequired();
            builder.Property(x => x.EventId).HasColumnName(@"EventID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ProductPermission).HasColumnName(@"ProductPermission").HasColumnType("bit").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.SamtRequest).WithMany(b => b.SamtRequestEvents).HasForeignKey(c => c.RequestId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SAMT_RequestEvents_SAMT_Requests");

            builder.HasIndex(x => x.RequestId).HasDatabaseName("NonClusteredIndex-20200120-001612");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<SamtRequestEvent> builder);
    }

}
// </auto-generated>
