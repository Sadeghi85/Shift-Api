// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // ME_Epg
    public partial class MeEpgConfiguration : IEntityTypeConfiguration<MeEpg>
    {
        public void Configure(EntityTypeBuilder<MeEpg> builder)
        {
            builder.ToTable("ME_Epg", "dbo");
            builder.HasKey(x => new { x.EpgId, x.CreateDateTime });

            builder.Property(x => x.EpgId).HasColumnName(@"EpgId").HasColumnType("bigint").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.StateId).HasColumnName(@"StateId").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.Date).HasColumnName(@"Date").HasColumnType("nchar(10)").IsRequired(false).IsFixedLength().HasMaxLength(10);
            builder.Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType("nchar(12)").IsRequired(false).IsFixedLength().HasMaxLength(12);
            builder.Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType("nchar(12)").IsRequired(false).IsFixedLength().HasMaxLength(12);
            builder.Property(x => x.NetworkId).HasColumnName(@"NetworkId").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.NetworkName).HasColumnName(@"NetworkName").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.IsReplay).HasColumnName(@"IsReplay").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsRepeat).HasColumnName(@"IsRepeat").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Summary).HasColumnName(@"Summary").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.IsCommercials).HasColumnName(@"IsCommercials").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsInterlude).HasColumnName(@"IsInterlude").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LiveProgramTypeId).HasColumnName(@"LiveProgramTypeId").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.LiveProgramTypeName).HasColumnName(@"LiveProgramTypeName").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.LiveBroadcastModeName).HasColumnName(@"LiveBroadcastModeName").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.ProductionStateName).HasColumnName(@"ProductionStateName").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.GenreString).HasColumnName(@"GenreString").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.FormatString).HasColumnName(@"FormatString").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.GenreTagging).HasColumnName(@"GenreTagging").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.FormatTagging).HasColumnName(@"FormatTagging").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.Rownum).HasColumnName(@"rownum").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MainId).HasColumnName(@"MainId").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.MetaId).HasColumnName(@"MetaId").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.SubItemId).HasColumnName(@"Sub_Item_ID").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);

            builder.HasIndex(x => x.MetaId).HasDatabaseName("IX_ME_Epg");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<MeEpg> builder);
    }

}
// </auto-generated>
