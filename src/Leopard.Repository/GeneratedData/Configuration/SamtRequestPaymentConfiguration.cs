// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // SAMT_RequestPayments
    public partial class SamtRequestPaymentConfiguration : IEntityTypeConfiguration<SamtRequestPayment>
    {
        public void Configure(EntityTypeBuilder<SamtRequestPayment> builder)
        {
            builder.ToTable("SAMT_RequestPayments", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_TelavatRequestPayments").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.RequestId).HasColumnName(@"RequestID").HasColumnType("int").IsRequired();
            builder.Property(x => x.OldRequestId).HasColumnName(@"OldRequestID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Amount).HasColumnName(@"Amount").HasColumnType("float").HasPrecision(53).IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsCreditor).HasColumnName(@"IsCreditor").HasColumnType("bit").IsRequired();
            builder.Property(x => x.DatePayment).HasColumnName(@"DatePayment").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Type).HasColumnName(@"Type").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BaseYear).HasColumnName(@"BaseYear").HasColumnType("int").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.SamtRequest).WithMany(b => b.SamtRequestPayments).HasForeignKey(c => c.RequestId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatRequestPayments_SAMT_Requests");

            builder.HasIndex(x => x.DatePayment).HasDatabaseName("IX_PAYDATE");
            builder.HasIndex(x => x.RequestId).HasDatabaseName("IX_REQUESTID");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<SamtRequestPayment> builder);
    }

}
// </auto-generated>
