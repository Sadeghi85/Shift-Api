// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // News
    public partial class NewsConfiguration : IEntityTypeConfiguration<News>
    {
        public void Configure(EntityTypeBuilder<News> builder)
        {
            builder.ToTable("News", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_News_1").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.UserId).HasColumnName(@"UserID").HasColumnType("int").IsRequired();
            builder.Property(x => x.AgencyId).HasColumnName(@"AgencyID").HasColumnType("int").IsRequired();
            builder.Property(x => x.PositionNumber).HasColumnName(@"position_number").HasColumnType("int").IsRequired();
            builder.Property(x => x.NewsSource).HasColumnName(@"NewsSource").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar(1000)").IsRequired().HasMaxLength(1000);
            builder.Property(x => x.LeadText).HasColumnName(@"LeadText").HasColumnType("nvarchar(4000)").IsRequired().HasMaxLength(4000);
            builder.Property(x => x.FullText).HasColumnName(@"FullText").HasColumnType("ntext").IsRequired();
            builder.Property(x => x.FPicture).HasColumnName(@"FPicture").HasColumnType("nvarchar(300)").IsRequired().HasMaxLength(300);
            builder.Property(x => x.DatePublished).HasColumnName(@"DatePublished").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
            builder.Property(x => x.TimePublished).HasColumnName(@"TimePublished").HasColumnType("char(5)").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(5);
            builder.Property(x => x.DateShown).HasColumnName(@"DateShown").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
            builder.Property(x => x.TimeShown).HasColumnName(@"TimeShown").HasColumnType("char(5)").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(5);
            builder.Property(x => x.Enabled).HasColumnName(@"Enabled").HasColumnType("bit").IsRequired();
            builder.Property(x => x.Hit).HasColumnName(@"Hit").HasColumnType("int").IsRequired();
            builder.Property(x => x.TotalVotes).HasColumnName(@"TotalVotes").HasColumnType("int").IsRequired();
            builder.Property(x => x.TotalValue).HasColumnName(@"TotalValue").HasColumnType("int").IsRequired();
            builder.Property(x => x.SPicture).HasColumnName(@"SPicture").HasColumnType("nvarchar(300)").IsRequired(false).HasMaxLength(300);
            builder.Property(x => x.DateEndShown).HasColumnName(@"DateEndShown").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.TimeEndShown).HasColumnName(@"TimeEndShown").HasColumnType("char(5)").IsRequired(false).IsFixedLength().IsUnicode(false).HasMaxLength(5);
            builder.Property(x => x.PortalId).HasColumnName(@"PortalID").HasColumnType("int").IsRequired();
            builder.Property(x => x.Ordering).HasColumnName(@"Ordering").HasColumnType("int").IsRequired();
            builder.Property(x => x.ReturnDescription).HasColumnName(@"ReturnDescription").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Rate).HasColumnName(@"Rate").HasColumnType("int").IsRequired();
            builder.Property(x => x.TitleAttachmentFile).HasColumnName(@"TitleAttachmentFile").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.AttachmentFile).HasColumnName(@"AttachmentFile").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.TitleSoundFile).HasColumnName(@"TitleSoundFile").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.SoundFile).HasColumnName(@"SoundFile").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.IsImportant).HasColumnName(@"IsImportant").HasColumnType("bit").IsRequired();
            builder.Property(x => x.AltenateTextImage).HasColumnName(@"AltenateTextImage").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Margin).HasColumnName(@"Margin").HasColumnType("ntext").IsRequired();
            builder.Property(x => x.Tag).HasColumnName(@"Tag").HasColumnType("nvarchar(4000)").IsRequired().HasMaxLength(4000);

            // Foreign keys
            builder.HasOne(a => a.NewsAgency).WithMany(b => b.News).HasForeignKey(c => c.AgencyId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_News_NewsAgencies1");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<News> builder);
    }

}
// </auto-generated>
