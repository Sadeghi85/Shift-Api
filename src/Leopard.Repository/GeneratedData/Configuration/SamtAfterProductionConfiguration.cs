// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // SAMT_AfterProductions
    public partial class SamtAfterProductionConfiguration : IEntityTypeConfiguration<SamtAfterProduction>
    {
        public void Configure(EntityTypeBuilder<SamtAfterProduction> builder)
        {
            builder.ToTable("SAMT_AfterProductions", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_SAMT_AfterProductions").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.InitialCompilationProgress).HasColumnName(@"InitialCompilationProgress").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MusicMakingProgress).HasColumnName(@"MusicMakingProgress").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ComposerName).HasColumnName(@"ComposerName").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.CaptionMakingProgress).HasColumnName(@"CaptionMakingProgress").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CaptionMakingDescription).HasColumnName(@"CaptionMakingDescription").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.SpecialEffectsProgress).HasColumnName(@"SpecialEffectsProgress").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TrojKarTime).HasColumnName(@"TrojKarTime").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ConpetDesignProgress).HasColumnName(@"ConpetDesignProgress").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ConpetDesignTime).HasColumnName(@"ConpetDesignTime").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.FieldSpecialEffect).HasColumnName(@"FieldSpecialEffect").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.ColorCorrectionProgress).HasColumnName(@"ColorCorrectionProgress").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ColorCorrectionPart).HasColumnName(@"ColorCorrectionPart").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.VoiceMixingProgress).HasColumnName(@"VoiceMixingProgress").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.VoiceMixingPart).HasColumnName(@"VoiceMixingPart").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.FinalCompilationProgress).HasColumnName(@"FinalCompilationProgress").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.FinalCompilationPart).HasColumnName(@"FinalCompilationPart").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.RequestId).HasColumnName(@"RequestID").HasColumnType("int").IsRequired();
            builder.Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.ModifyDate).HasColumnName(@"ModifyDate").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.CreatorId).HasColumnName(@"CreatorId").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.SamtRequest).WithMany(b => b.SamtAfterProductions).HasForeignKey(c => c.RequestId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SAMT_AfterProductions_SAMT_Requests");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<SamtAfterProduction> builder);
    }

}
// </auto-generated>
