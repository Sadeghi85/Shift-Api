// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // ConductorChannelPrograms
    public partial class ConductorChannelProgramConfiguration : IEntityTypeConfiguration<ConductorChannelProgram>
    {
        public void Configure(EntityTypeBuilder<ConductorChannelProgram> builder)
        {
            builder.ToTable("ConductorChannelPrograms", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_ASChannelPrograms").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.ChannelId).HasColumnName(@"ChannelID").HasColumnType("int").IsRequired();
            builder.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar(1000)").IsRequired().HasMaxLength(1000);
            builder.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.PortalId).HasColumnName(@"PortalID").HasColumnType("int").IsRequired();
            builder.Property(x => x.Enable).HasColumnName(@"Enable").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsLive).HasColumnName(@"isLive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsLocked).HasColumnName(@"IsLocked").HasColumnType("bit").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.ChannelGroupId).HasColumnName(@"ChannelGroupID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProgramTypeId).HasColumnName(@"ProgramTypeID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ClacketCount).HasColumnName(@"ClacketCount").HasColumnType("int").IsRequired();
            builder.Property(x => x.ClacketWarning).HasColumnName(@"ClacketWarning").HasColumnType("int").IsRequired();
            builder.Property(x => x.ProgramImage).HasColumnName(@"ProgramImage").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.ProgramLogo).HasColumnName(@"ProgramLogo").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.ThumbnailProgramLogo).HasColumnName(@"ThumbnailProgramLogo").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.ThumbnailProgramImage).HasColumnName(@"ThumbnailProgramImage").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.TaminGroupId).HasColumnName(@"TaminGroupID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.AdaptiveTitle).HasColumnName(@"AdaptiveTitle").HasColumnType("nvarchar(250)").IsRequired(false).HasMaxLength(250);
            builder.Property(x => x.IsClipArt).HasColumnName(@"IsClipArt").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ProgramTime).HasColumnName(@"ProgramTime").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.PermissibleDate).HasColumnName(@"PermissibleDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.IsPlayable).HasColumnName(@"IsPlayable").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ClipArtCategoryId).HasColumnName(@"ClipArtCategoryID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ClipArtSubCategoryId).HasColumnName(@"ClipArtSubCategoryID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ClipArtSubject).HasColumnName(@"ClipArtSubject").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.ClipArtProgramNumber).HasColumnName(@"ClipArtProgramNumber").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.SubjectId).HasColumnName(@"SubjectID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.FrameId).HasColumnName(@"FrameID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProgramSummery).HasColumnName(@"ProgramSummery").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.FurtherInfo).HasColumnName(@"FurtherInfo").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ProgramProducer).HasColumnName(@"ProgramProducer").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);
            builder.Property(x => x.ProductionType).HasColumnName(@"ProductionType").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BroadcastType).HasColumnName(@"BroadcastType").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProgramGradeId).HasColumnName(@"ProgramGradeID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProgramApproachId).HasColumnName(@"ProgramApproachID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EstimateNumber).HasColumnName(@"EstimateNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.ProgramIdentity).HasColumnName(@"ProgramIdentity").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Director).HasColumnName(@"Director").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.HasPartner).HasColumnName(@"HasPartner").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.PartnerInfo).HasColumnName(@"PartnerInfo").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.AgeRangeId).HasColumnName(@"AgeRangeID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.AgeWarningId).HasColumnName(@"AgeWarningID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.GeneralTopic).HasColumnName(@"GeneralTopic").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.WebAddress).HasColumnName(@"WebAddress").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SocialNetwork).HasColumnName(@"SocialNetwork").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SmsNumber).HasColumnName(@"SmsNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.BroadcastTypeId).HasColumnName(@"BroadcastTypeID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BroadcastFrameId).HasColumnName(@"BroadcastFrameID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ClipArtSuitableTimeId).HasColumnName(@"ClipArtSuitableTimeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SamtId).HasColumnName(@"SamtId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TaminTypeId).HasColumnName(@"TaminTypeID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ShowInRightClickMenu).HasColumnName(@"ShowInRightClickMenu").HasColumnType("bit").IsRequired();
            builder.Property(x => x.RightClickActionAs).HasColumnName(@"RightClickActionAs").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SoundBandId).HasColumnName(@"SoundBandID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.MoeinId).HasColumnName(@"moeinId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.EventId).HasColumnName(@"EventId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.FileAddress).HasColumnName(@"FileAddress").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.StructureId).HasColumnName(@"StructureID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CountryProducer).HasColumnName(@"CountryProducer").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.ProductionYear).HasColumnName(@"ProductionYear").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SubStructureId).HasColumnName(@"SubStructureID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsFromNegar).HasColumnName(@"IsFromNegar").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ProductId).HasColumnName(@"ProductId").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.IsFromSimaDepartment).HasColumnName(@"IsFromSimaDepartment").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ConductorBoxTypeId).HasColumnName(@"ConductorBoxTypeID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PreprationTypeId).HasColumnName(@"PreprationTypeID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SimaClipArtApprovalStatus).HasColumnName(@"SimaClipArtApprovalStatus").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SimaClipArtApprovalDescription).HasColumnName(@"SimaClipArtApprovalDescription").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.SimaClipArtApprovalUserId).HasColumnName(@"SimaClipArtApprovalUserID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SimaClipArtApprovalDate).HasColumnName(@"SimaClipArtApprovalDate").HasColumnType("datetime").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.SamtStructure).WithMany(b => b.ConductorChannelPrograms).HasForeignKey(c => c.StructureId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConductorChannelPrograms_SAMT_Structures");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<ConductorChannelProgram> builder);
    }

}
// </auto-generated>
