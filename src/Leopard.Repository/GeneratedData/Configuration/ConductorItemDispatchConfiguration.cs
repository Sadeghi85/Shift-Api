// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // ConductorItemDispatch
    public partial class ConductorItemDispatchConfiguration : IEntityTypeConfiguration<ConductorItemDispatch>
    {
        public void Configure(EntityTypeBuilder<ConductorItemDispatch> builder)
        {
            builder.ToTable("ConductorItemDispatch", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_ConductorItemDispatch").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.UnitType).HasColumnName(@"UnitType").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.RequestId).HasColumnName(@"RequestID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.FromUserId).HasColumnName(@"FromUserID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ToUserId).HasColumnName(@"ToUserID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.IsViewed).HasColumnName(@"IsViewed").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.ArchiveDescription).HasColumnName(@"ArchiveDescription").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.TotalTime).HasColumnName(@"TotalTime").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.BazbinStatus).HasColumnName(@"BazbinStatus").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsArchived).HasColumnName(@"IsArchived").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ProgramOrientation).HasColumnName(@"ProgramOrientation").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProgramSubject).HasColumnName(@"ProgramSubject").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.ProgramOccasion).HasColumnName(@"ProgramOccasion").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.SoundBand).HasColumnName(@"SoundBand").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Director).HasColumnName(@"Director").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Moderator).HasColumnName(@"Moderator").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.CommercialTime).HasColumnName(@"CommercialTime").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SubtitleTime).HasColumnName(@"SubtitleTime").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.Actors).HasColumnName(@"Actors").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Experts).HasColumnName(@"Experts").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ProgramSummary).HasColumnName(@"ProgramSummary").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ChannelId).HasColumnName(@"ChannelId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProgramId).HasColumnName(@"ProgramId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ClacketNo).HasColumnName(@"ClacketNo").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.StepId).HasColumnName(@"StepId").HasColumnType("int").IsRequired();
            builder.Property(x => x.DescriptionManager).HasColumnName(@"DescriptionManager").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.PassedStepId).HasColumnName(@"PassedStepId").HasColumnType("int").IsRequired();
            builder.Property(x => x.StatusId).HasColumnName(@"StatusId").HasColumnType("int").IsRequired();
            builder.Property(x => x.TadvinStatus).HasColumnName(@"TadvinStatus").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.FirstBazbinStatus).HasColumnName(@"FirstBazbinStatus").HasColumnType("int").IsRequired();
            builder.Property(x => x.ReportDesc).HasColumnName(@"ReportDesc").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.TadvinDispatchId).HasColumnName(@"TadvinDispatchID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.FirstBazbinDateTime).HasColumnName(@"FirstBazbinDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.BazbinDateTime).HasColumnName(@"BazbinDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.SendToBazbinDateTime).HasColumnName(@"SendToBazbinDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.DescManagerForBazbin).HasColumnName(@"DescManagerForBazbin").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.BazbinDescription).HasColumnName(@"BazbinDescription").HasColumnType("nvarchar(500)").IsRequired(false).HasMaxLength(500);

            // Foreign keys
            builder.HasOne(a => a.ConductorTablePakhsh).WithMany(b => b.ConductorItemDispatches).HasForeignKey(c => c.RequestId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConductorItemDispatch_ConductorTablePakhsh");
            builder.HasOne(a => a.PassedStep).WithMany(b => b.ConductorItemDispatches_PassedStepId).HasForeignKey(c => c.PassedStepId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConductorItemDispatch_ProcessSteps1");
            builder.HasOne(a => a.ProcessStatu).WithMany(b => b.ConductorItemDispatches).HasForeignKey(c => c.StatusId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConductorItemDispatch_ProcessStatus");
            builder.HasOne(a => a.Step).WithMany(b => b.ConductorItemDispatches_StepId).HasForeignKey(c => c.StepId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConductorItemDispatch_ProcessSteps");
            builder.HasOne(a => a.TadvinDispatch).WithMany(b => b.ConductorItemDispatches).HasForeignKey(c => c.TadvinDispatchId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConductorItemDispatch_ConductorItemDispatch");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<ConductorItemDispatch> builder);
    }

}
// </auto-generated>
