// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // TelavatProgramVideos
    public partial class TelavatProgramVideoConfiguration : IEntityTypeConfiguration<TelavatProgramVideo>
    {
        public void Configure(EntityTypeBuilder<TelavatProgramVideo> builder)
        {
            builder.ToTable("TelavatProgramVideos", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_TelavatProgramVideos").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.LogId).HasColumnName(@"LogID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProgramTitle).HasColumnName(@"ProgramTitle").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.GroupId).HasColumnName(@"GroupID").HasColumnType("int").IsRequired();
            builder.Property(x => x.EstimateNumer).HasColumnName(@"EstimateNumer").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.Producer).HasColumnName(@"Producer").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.Part).HasColumnName(@"Part").HasColumnType("int").IsRequired();
            builder.Property(x => x.Time).HasColumnName(@"Time").HasColumnType("int").IsRequired();
            builder.Property(x => x.BandSoundId).HasColumnName(@"BandSoundID").HasColumnType("int").IsRequired();
            builder.Property(x => x.BroadcastDate).HasColumnName(@"BroadcastDate").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
            builder.Property(x => x.StructureId).HasColumnName(@"StructureID").HasColumnType("int").IsRequired();
            builder.Property(x => x.TypeId).HasColumnName(@"TypeID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ExpertId).HasColumnName(@"ExpertID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ReaderId).HasColumnName(@"ReaderID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ExecuterId).HasColumnName(@"ExecuterID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.SubtitleStatusId).HasColumnName(@"SubtitleStatusID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ProgramStatusId).HasColumnName(@"ProgramStatusID").HasColumnType("int").IsRequired();
            builder.Property(x => x.PlayStatusId).HasColumnName(@"PlayStatusID").HasColumnType("int").IsRequired();
            builder.Property(x => x.HasLogo).HasColumnName(@"HasLogo").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ProgramOccasionId).HasColumnName(@"ProgramOccasionID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.VideoFile).HasColumnName(@"VideoFile").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.CountCorrective).HasColumnName(@"CountCorrective").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.RegDate).HasColumnName(@"RegDate").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
            builder.Property(x => x.RegTime).HasColumnName(@"RegTime").HasColumnType("nvarchar(5)").IsRequired().HasMaxLength(5);
            builder.Property(x => x.FileName).HasColumnName(@"FileName").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.NumberProgram).HasColumnName(@"NumberProgram").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsPrinted).HasColumnName(@"IsPrinted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.ReviewerName).HasColumnName(@"ReviewerName").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.Subject).HasColumnName(@"Subject").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.IsSend).HasColumnName(@"IsSend").HasColumnType("bit").IsRequired();
            builder.Property(x => x.PathLocalFile).HasColumnName(@"PathLocalFile").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.SenderUserId).HasColumnName(@"SenderUserID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ReceiverUserId).HasColumnName(@"ReceiverUserID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ReceiveDate).HasColumnName(@"ReceiveDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.ReceiveTime).HasColumnName(@"ReceiveTime").HasColumnType("nvarchar(5)").IsRequired(false).HasMaxLength(5);

            // Foreign keys
            builder.HasOne(a => a.Executer).WithMany(b => b.TelavatProgramVideos_ExecuterId).HasForeignKey(c => c.ExecuterId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatProgramVideos_TelavatProgramExperts2");
            builder.HasOne(a => a.Expert).WithMany(b => b.TelavatProgramVideos_ExpertId).HasForeignKey(c => c.ExpertId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatProgramVideos_TelavatProgramExperts");
            builder.HasOne(a => a.Reader).WithMany(b => b.TelavatProgramVideos_ReaderId).HasForeignKey(c => c.ReaderId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatProgramVideos_TelavatProgramExperts1");
            builder.HasOne(a => a.SamtGroup).WithMany(b => b.TelavatProgramVideos).HasForeignKey(c => c.GroupId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatProgramVideos_TelavatGroups");
            builder.HasOne(a => a.SamtRequestLog).WithMany(b => b.TelavatProgramVideos).HasForeignKey(c => c.LogId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatProgramVideos_TelavatRequestLogs");
            builder.HasOne(a => a.SamtStructure).WithMany(b => b.TelavatProgramVideos).HasForeignKey(c => c.StructureId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatProgramVideos_TelavatProgramStructures");
            builder.HasOne(a => a.TelavatBandSound).WithMany(b => b.TelavatProgramVideos).HasForeignKey(c => c.BandSoundId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatProgramVideos_TelavatBandSounds");
            builder.HasOne(a => a.TelavatPlayStatu).WithMany(b => b.TelavatProgramVideos).HasForeignKey(c => c.PlayStatusId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatProgramVideos_TelavatPlayStatus");
            builder.HasOne(a => a.TelavatProgramOccasion).WithMany(b => b.TelavatProgramVideos).HasForeignKey(c => c.ProgramOccasionId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatProgramVideos_TelavatProgramOccasions");
            builder.HasOne(a => a.TelavatProgramStatu).WithMany(b => b.TelavatProgramVideos).HasForeignKey(c => c.ProgramStatusId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatProgramVideos_TelavatProgramStatus");
            builder.HasOne(a => a.TelavatProgramType).WithMany(b => b.TelavatProgramVideos).HasForeignKey(c => c.TypeId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatProgramVideos_TelavatProgramTypes");
            builder.HasOne(a => a.TelavatProgramVideo1).WithOne(b => b.TelavatProgramVideo2).HasForeignKey<TelavatProgramVideo>(c => c.Id).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatProgramVideos_TelavatProgramVideos");
            builder.HasOne(a => a.TelavatSubtitleStatu).WithMany(b => b.TelavatProgramVideos).HasForeignKey(c => c.SubtitleStatusId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatProgramVideos_TelavatSubtitleStatus");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<TelavatProgramVideo> builder);
    }

}
// </auto-generated>
