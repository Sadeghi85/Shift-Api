// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // NewsComments
    public partial class NewsCommentConfiguration : IEntityTypeConfiguration<NewsComment>
    {
        public void Configure(EntityTypeBuilder<NewsComment> builder)
        {
            builder.ToTable("NewsComments", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_NewsComments").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.PortalId).HasColumnName(@"PortalID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.NewsId).HasColumnName(@"NewsID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.CommentText).HasColumnName(@"commentText").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("nvarchar(200)").IsRequired(false).HasMaxLength(200);
            builder.Property(x => x.Enabled).HasColumnName(@"Enabled").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.UserIp).HasColumnName(@"UserIP").HasColumnType("nchar(15)").IsRequired(false).IsFixedLength().HasMaxLength(15);
            builder.Property(x => x.CommentDate).HasColumnName(@"CommentDate").HasColumnType("nchar(10)").IsRequired(false).IsFixedLength().HasMaxLength(10);
            builder.Property(x => x.CommentTime).HasColumnName(@"CommentTime").HasColumnType("nchar(5)").IsRequired(false).IsFixedLength().HasMaxLength(5);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.News).WithMany(b => b.NewsComments).HasForeignKey(c => c.NewsId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_NewsComments_News");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<NewsComment> builder);
    }

}
// </auto-generated>
