// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // SAMT_RequestProductionEvents
    public partial class SamtRequestProductionEventConfiguration : IEntityTypeConfiguration<SamtRequestProductionEvent>
    {
        public void Configure(EntityTypeBuilder<SamtRequestProductionEvent> builder)
        {
            builder.ToTable("SAMT_RequestProductionEvents", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_SAMT_RequestProductionEvents").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.RequestId).HasColumnName(@"RequestID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ProductionEventId).HasColumnName(@"ProductionEventID").HasColumnType("int").IsRequired();
            builder.Property(x => x.Parts).HasColumnName(@"Parts").HasColumnType("int").IsRequired();
            builder.Property(x => x.Time).HasColumnName(@"Time").HasColumnType("int").IsRequired();
            builder.Property(x => x.ProgramType).HasColumnName(@"ProgramType").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsLive).HasColumnName(@"IsLive").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsNew).HasColumnName(@"IsNew").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsDirectEvent).HasColumnName(@"IsDirectEvent").HasColumnType("bit").IsRequired();
            builder.Property(x => x.PlayDate).HasColumnName(@"PlayDate").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
            builder.Property(x => x.PlayTime).HasColumnName(@"PlayTime").HasColumnType("nvarchar(5)").IsRequired().HasMaxLength(5);
            builder.Property(x => x.IsIndicator).HasColumnName(@"IsIndicator").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.Summary).HasColumnName(@"Summary").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.SamtProductionEvent).WithMany(b => b.SamtRequestProductionEvents).HasForeignKey(c => c.ProductionEventId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SAMT_RequestProductionEvents_SAMT_ProductionEvents");
            builder.HasOne(a => a.SamtRequest).WithMany(b => b.SamtRequestProductionEvents).HasForeignKey(c => c.RequestId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SAMT_RequestProductionEvents_SAMT_Requests");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<SamtRequestProductionEvent> builder);
    }

}
// </auto-generated>
