// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // TelavatGroupPermissions
    public partial class TelavatGroupPermissionConfiguration : IEntityTypeConfiguration<TelavatGroupPermission>
    {
        public void Configure(EntityTypeBuilder<TelavatGroupPermission> builder)
        {
            builder.ToTable("TelavatGroupPermissions", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_TelavatGroupPermissions").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.UserId).HasColumnName(@"UserID").HasColumnType("int").IsRequired();
            builder.Property(x => x.GroupId).HasColumnName(@"GroupID").HasColumnType("int").IsRequired();
            builder.Property(x => x.PortalId).HasColumnName(@"PortalID").HasColumnType("int").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.SamtGroup).WithMany(b => b.TelavatGroupPermissions).HasForeignKey(c => c.GroupId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatGroupPermissions_TelavatGroups");
            builder.HasOne(a => a.User).WithMany(b => b.TelavatGroupPermissions).HasForeignKey(c => c.UserId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatGroupPermissions_Users");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<TelavatGroupPermission> builder);
    }

}
// </auto-generated>
