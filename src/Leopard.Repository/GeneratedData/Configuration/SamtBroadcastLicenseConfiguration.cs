// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // SAMT_BroadcastLicense
    public partial class SamtBroadcastLicenseConfiguration : IEntityTypeConfiguration<SamtBroadcastLicense>
    {
        public void Configure(EntityTypeBuilder<SamtBroadcastLicense> builder)
        {
            builder.ToTable("SAMT_BroadcastLicense", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_SAMT_BroadcastLicense").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.BuilderReviewId).HasColumnName(@"BuilderReviewId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.LicenseLetterNo).HasColumnName(@"LicenseLetterNo").HasColumnType("nvarchar(300)").IsRequired(false).HasMaxLength(300);
            builder.Property(x => x.SoundBandId).HasColumnName(@"SoundBandId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ImageRatioId).HasColumnName(@"ImageRatioId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.FileFormatId).HasColumnName(@"FileFormatId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ProgAgeRangeId).HasColumnName(@"ProgAgeRangeId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.AgeWarningId).HasColumnName(@"AgeWarningId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.WebSite).HasColumnName(@"WebSite").HasColumnType("nvarchar(300)").IsRequired(false).HasMaxLength(300);
            builder.Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.SocialNetwork).HasColumnName(@"SocialNetwork").HasColumnType("nvarchar(100)").IsRequired(false).HasMaxLength(100);
            builder.Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SmsNumber).HasColumnName(@"SmsNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.SmsQuestion).HasColumnName(@"SmsQuestion").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.HasSubtitle).HasColumnName(@"HasSubtitle").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.SubtitleText).HasColumnName(@"SubtitleText").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.LicenseImg).HasColumnName(@"licenseImg").HasColumnType("nvarchar(400)").IsRequired(false).HasMaxLength(400);

            // Foreign keys
            builder.HasOne(a => a.SamtBuilderReview).WithMany(b => b.SamtBroadcastLicenses).HasForeignKey(c => c.BuilderReviewId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SAMT_BroadcastLicense_SAMT_BuilderReviews");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<SamtBroadcastLicense> builder);
    }

}
// </auto-generated>
