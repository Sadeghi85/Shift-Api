// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // TelavatPlaybackReports
    public partial class TelavatPlaybackReportConfiguration : IEntityTypeConfiguration<TelavatPlaybackReport>
    {
        public void Configure(EntityTypeBuilder<TelavatPlaybackReport> builder)
        {
            builder.ToTable("TelavatPlaybackReports", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_TelavatPlaybackReports").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.LogId).HasColumnName(@"LogID").HasColumnType("int").IsRequired();
            builder.Property(x => x.BandSoundId).HasColumnName(@"BandSoundID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TimeTizer).HasColumnName(@"TimeTizer").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.PlayOccasion).HasColumnName(@"PlayOccasion").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.PlayDate).HasColumnName(@"PlayDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.Subject).HasColumnName(@"Subject").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Presenter).HasColumnName(@"Presenter").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Expert).HasColumnName(@"Expert").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.DirectGuest).HasColumnName(@"DirectGuest").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.PhoneGuest).HasColumnName(@"PhoneGuest").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.VerificationCode).HasColumnName(@"VerificationCode").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ReviewDate).HasColumnName(@"ReviewDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.ReviewTime).HasColumnName(@"ReviewTime").HasColumnType("nvarchar(5)").IsRequired(false).HasMaxLength(5);
            builder.Property(x => x.Problems).HasColumnName(@"Problems").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.FirstBroadcastDate).HasColumnName(@"FirstBroadcastDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.FirstBroadcastTime).HasColumnName(@"FirstBroadcastTime").HasColumnType("nvarchar(5)").IsRequired(false).HasMaxLength(5);
            builder.Property(x => x.FirstSecretaryScene).HasColumnName(@"FirstSecretaryScene").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.SecondBroadcastDate).HasColumnName(@"SecondBroadcastDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.SecondBroadcastTime).HasColumnName(@"SecondBroadcastTime").HasColumnType("nvarchar(5)").IsRequired(false).HasMaxLength(5);
            builder.Property(x => x.SecondSecretaryScene).HasColumnName(@"SecondSecretaryScene").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.EventId).HasColumnName(@"EventID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.SamtRequestLog).WithMany(b => b.TelavatPlaybackReports).HasForeignKey(c => c.LogId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatPlaybackReports_TelavatRequestLogs");
            builder.HasOne(a => a.TelavatBandSound).WithMany(b => b.TelavatPlaybackReports).HasForeignKey(c => c.BandSoundId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatPlaybackReports_TelavatBandSounds");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<TelavatPlaybackReport> builder);
    }

}
// </auto-generated>
