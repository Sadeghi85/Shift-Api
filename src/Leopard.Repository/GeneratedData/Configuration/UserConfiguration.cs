// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // Users
    public partial class UserConfiguration : IEntityTypeConfiguration<User>
    {
        public void Configure(EntityTypeBuilder<User> builder)
        {
            builder.ToTable("Users", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_Users").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.Username).HasColumnName(@"Username").HasColumnType("nvarchar(100)").IsRequired().HasMaxLength(100);
            builder.Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("nvarchar(200)").IsRequired().HasMaxLength(200);
            builder.Property(x => x.LastName).HasColumnName(@"LastName").HasColumnType("nvarchar(200)").IsRequired().HasMaxLength(200);
            builder.Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar(200)").IsRequired().HasMaxLength(200);
            builder.Property(x => x.Password).HasColumnName(@"Password").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.LoginKey).HasColumnName(@"LoginKey").HasColumnType("varchar(16)").IsRequired().IsUnicode(false).HasMaxLength(16);
            builder.Property(x => x.RandomId).HasColumnName(@"RandomID").HasColumnType("int").IsRequired();
            builder.Property(x => x.LastLogin).HasColumnName(@"LastLogin").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.PortalId).HasColumnName(@"PortalID").HasColumnType("int").IsRequired();
            builder.Property(x => x.PassExpireDate).HasColumnName(@"PassExpireDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.UnExpire).HasColumnName(@"UnExpire").HasColumnType("bit").IsRequired();
            builder.Property(x => x.FailedPassword).HasColumnName(@"FailedPassword").HasColumnType("int").IsRequired();
            builder.Property(x => x.FailedPasswordDateTime).HasColumnName(@"FailedPasswordDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.IsLock).HasColumnName(@"IsLock").HasColumnType("bit").IsRequired();
            builder.Property(x => x.QuestionSecurityId).HasColumnName(@"QuestionSecurityID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.AnswerQuestionSecurity).HasColumnName(@"AnswerQuestionSecurity").HasColumnType("nvarchar(1000)").IsRequired(false).HasMaxLength(1000);
            builder.Property(x => x.UserType).HasColumnName(@"UserType").HasColumnType("int").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.AuthenticationType).HasColumnName(@"AuthenticationType").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);
            builder.Property(x => x.EmailConfirmed).HasColumnName(@"EmailConfirmed").HasColumnType("bit").IsRequired();
            builder.Property(x => x.IsAuthenticated).HasColumnName(@"IsAuthenticated").HasColumnType("bit").IsRequired();
            builder.Property(x => x.PasswordHash).HasColumnName(@"PasswordHash").HasColumnType("nvarchar(150)").IsRequired(false).HasMaxLength(150);
            builder.Property(x => x.PhoneNumber).HasColumnName(@"PhoneNumber").HasColumnType("nvarchar(50)").IsRequired(false).HasMaxLength(50);

            // Foreign keys
            builder.HasOne(a => a.Portal).WithMany(b => b.Users).HasForeignKey(c => c.PortalId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Users_Portals");

            builder.HasIndex(x => x.PortalId).HasDatabaseName("IX_PORTALID");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<User> builder);
    }

}
// </auto-generated>
