// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // ConductorBroadcastCertificates
    public partial class ConductorBroadcastCertificateConfiguration : IEntityTypeConfiguration<ConductorBroadcastCertificate>
    {
        public void Configure(EntityTypeBuilder<ConductorBroadcastCertificate> builder)
        {
            builder.ToTable("ConductorBroadcastCertificates", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_ConductorBroadcastCertificates").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.ConductorId).HasColumnName(@"ConductorID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ChannelId).HasColumnName(@"ChannelID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ProgramId).HasColumnName(@"ProgramID").HasColumnType("int").IsRequired();
            builder.Property(x => x.ProgramPartNo).HasColumnName(@"ProgramPartNo").HasColumnType("int").IsRequired();
            builder.Property(x => x.BroadcastDate).HasColumnName(@"BroadcastDate").HasColumnType("nvarchar(10)").IsRequired().HasMaxLength(10);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.ConductorChannelProgram).WithMany(b => b.ConductorBroadcastCertificates).HasForeignKey(c => c.ProgramId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConductorBroadcastCertificates_ConductorChannelPrograms");
            builder.HasOne(a => a.ConductorTablePakhsh).WithMany(b => b.ConductorBroadcastCertificates).HasForeignKey(c => c.ConductorId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConductorBroadcastCertificates_ConductorTablePakhsh");
            builder.HasOne(a => a.Portal).WithMany(b => b.ConductorBroadcastCertificates).HasForeignKey(c => c.ChannelId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ConductorBroadcastCertificates_Portals");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<ConductorBroadcastCertificate> builder);
    }

}
// </auto-generated>
