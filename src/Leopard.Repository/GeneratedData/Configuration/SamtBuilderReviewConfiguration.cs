// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // SAMT_BuilderReviews
    public partial class SamtBuilderReviewConfiguration : IEntityTypeConfiguration<SamtBuilderReview>
    {
        public void Configure(EntityTypeBuilder<SamtBuilderReview> builder)
        {
            builder.ToTable("SAMT_BuilderReviews", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_TelavatBuilderReviews").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.LogId).HasColumnName(@"LogID").HasColumnType("int").IsRequired();
            builder.Property(x => x.IsLive).HasColumnName(@"IsLive").HasColumnType("bit").IsRequired(false);
            builder.Property(x => x.Subject).HasColumnName(@"Subject").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.ReviewDate).HasColumnName(@"ReviewDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.BroadcastDate).HasColumnName(@"BroadcastDate").HasColumnType("nvarchar(10)").IsRequired(false).HasMaxLength(10);
            builder.Property(x => x.BroadcasTime).HasColumnName(@"BroadcasTime").HasColumnType("nvarchar(5)").IsRequired(false).HasMaxLength(5);
            builder.Property(x => x.TitrageStartStructureType).HasColumnName(@"TitrageStart_StructureType").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TitrageStartTime).HasColumnName(@"TitrageStart_Time").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TitrageStartDesc).HasColumnName(@"TitrageStart_Desc").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Presenter).HasColumnName(@"Presenter").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Expert).HasColumnName(@"Expert").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.DirectGuest).HasColumnName(@"DirectGuest").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.PhoneGuest).HasColumnName(@"PhoneGuest").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Location).HasColumnName(@"Location").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.TitrageEndStructureType).HasColumnName(@"TitrageEnd_StructureType").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TitrageEndTime).HasColumnName(@"TitrageEnd_Time").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.TitrageEndDesc).HasColumnName(@"TitrageEnd_Desc").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Problems).HasColumnName(@"Problems").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.OmidId).HasColumnName(@"OmidId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.QuranId).HasColumnName(@"QuranId").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.SamtRequestLog).WithMany(b => b.SamtBuilderReviews).HasForeignKey(c => c.LogId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TelavatBuilderReviews_TelavatRequestLogs");

            builder.HasIndex(x => x.LogId).HasDatabaseName("NonClusteredIndex-20200210-032935");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<SamtBuilderReview> builder);
    }

}
// </auto-generated>
