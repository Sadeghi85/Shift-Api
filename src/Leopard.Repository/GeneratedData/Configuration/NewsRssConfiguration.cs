// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // NewsRss
    public partial class NewsRssConfiguration : IEntityTypeConfiguration<NewsRss>
    {
        public void Configure(EntityTypeBuilder<NewsRss> builder)
        {
            builder.ToTable("NewsRss", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_NewsRss").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.FeedId).HasColumnName(@"FeedID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Enabled).HasColumnName(@"Enabled").HasColumnType("bit").IsRequired();
            builder.Property(x => x.Link).HasColumnName(@"Link").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar(max)").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.NewsFeed).WithMany(b => b.NewsRsses).HasForeignKey(c => c.FeedId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_NewsRss_NewsFeeds");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<NewsRss> builder);
    }

}
// </auto-generated>
