// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // SAMT_RequestLogs
    public partial class SamtRequestLogConfiguration : IEntityTypeConfiguration<SamtRequestLog>
    {
        public void Configure(EntityTypeBuilder<SamtRequestLog> builder)
        {
            builder.ToTable("SAMT_RequestLogs", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_TelavatRequestLogs").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.RequestId).HasColumnName(@"RequestID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.OldRequestId).HasColumnName(@"OldRequestID").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar(max)").IsRequired(false);
            builder.Property(x => x.Step).HasColumnName(@"Step").HasColumnType("int").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.Part).HasColumnName(@"Part").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.Time).HasColumnName(@"Time").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            builder.Property(x => x.LastLogStep).HasColumnName(@"LastLogStep").HasColumnType("bit").IsRequired();
            builder.Property(x => x.OmidId).HasColumnName(@"OmidId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.QuranId).HasColumnName(@"QuranId").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.BaseYear).HasColumnName(@"BaseYear").HasColumnType("int").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.SamtRequest).WithMany(b => b.SamtRequestLogs).HasForeignKey(c => c.RequestId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SAMT_RequestLogs_SAMT_Requests");
            builder.HasOne(a => a.User).WithMany(b => b.SamtRequestLogs).HasForeignKey(c => c.CreatedBy).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_SAMT_RequestLogs_Users");

            builder.HasIndex(x => x.CreateDateTime).HasDatabaseName("IX_DATE");
            builder.HasIndex(x => x.RequestId).HasDatabaseName("IX_REQID");
            builder.HasIndex(x => x.Step).HasDatabaseName("IX_STEP");

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<SamtRequestLog> builder);
    }

}
// </auto-generated>
