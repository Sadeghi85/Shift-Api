// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Leopard.Repository
{
    // IranHijriCalendarSetting
    public partial class IranHijriCalendarSettingConfiguration : IEntityTypeConfiguration<IranHijriCalendarSetting>
    {
        public void Configure(EntityTypeBuilder<IranHijriCalendarSetting> builder)
        {
            builder.ToTable("IranHijriCalendarSetting", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_IranHijriCalendarSetting").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.DaysInMonth).HasColumnName(@"DaysInMonth").HasColumnType("int").IsRequired();
            builder.Property(x => x.MonthStartDate).HasColumnName(@"MonthStartDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.MonthEndDate).HasColumnName(@"MonthEndDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.HijriMonth).HasColumnName(@"HijriMonth").HasColumnType("int").IsRequired();
            builder.Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("int").IsRequired(false);
            builder.Property(x => x.CreateDateTime).HasColumnName(@"CreateDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.LastModifiedDateTime).HasColumnName(@"LastModifiedDateTime").HasColumnType("datetime").IsRequired(false);
            builder.Property(x => x.HijriYear).HasColumnName(@"HijriYear").HasColumnType("int").IsRequired();

            InitializePartial(builder);
        }

        partial void InitializePartial(EntityTypeBuilder<IranHijriCalendarSetting> builder);
    }

}
// </auto-generated>
